[{"path":"https://systemsbioinformatics.github.io/excelDataGuide/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 excelDataGuide authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://systemsbioinformatics.github.io/excelDataGuide/articles/writing_templates_and_data_guides.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"writing_templates_and_data_guides","text":"Spreadsheets widely used biochemical laboratories recording analyzing experiments. experiments become routine, spreadsheet templates often created streamline workflows ensure consistency. goal excelDataGuide package enable use Excel spreadsheets alongside scripting environments effective data analysis tools. scripting languages offer flexibility power—especially analyzing large datasets across multiple workbooks—spreadsheet remains primary source data. “single-source--truth” approach ensures spreadsheet-based script-based analyses rely underlying data parameters. includes: Metadata Experimental parameters (e.g., acceptance criteria, concentrations) Measured data Parameters acceptance criteria typically defined standard operating procedures (SOPs) fixed spreadsheet templates. values, experimental measurements fitted parameters, vary per experiment entered user. cases, may beneficial script also use calculated data spreadsheet—especially calculations automatically triggered upon user input. decision depends specific analysis needs reliability spreadsheet-based computations.","code":""},{"path":"https://systemsbioinformatics.github.io/excelDataGuide/articles/writing_templates_and_data_guides.html","id":"structuring-a-template","dir":"Articles","previous_headings":"","what":"Structuring a template","title":"writing_templates_and_data_guides","text":"provide link data structures programming languages spreadsheet consider following four types data structures template: keyvalue: key-value pair, key variable name value value variable. key value placed horizontally adjacent cells (columns). key, translated short name (see ) used parameter name scripts conform variable naming rules scripting language used. key found left-cell cell range. value can single value (one cell) vector values (multiple cells). cells: occasionally may convenient read values single cells provide keys (names) corresponding variables data guide. data stored key-value pairs, contrast keyvalue data type variable name provided template data guide must provide variable name. table: tabular data columns represent variables rows represent items variables assessed. Column names written first row used variable names. platedata: data registered row-column format microplate experiment performed. first row contains variable name left-cell, followed (integer) column names. Every subsequent row contains row name (capital letters) followed values well. variable name data read script. column row names ignored. Therefore, first row column range also empty, except variable name. Plate data stored tables , apart variables provided template two additional columns added, namely row column, corresponding row column microplate. example front page template (fitc-t4 TTR assay), illustrating number ideas concepts discuss . First page template","code":""},{"path":"https://systemsbioinformatics.github.io/excelDataGuide/articles/writing_templates_and_data_guides.html","id":"a-template-has-a-version-number","dir":"Articles","previous_headings":"Structuring a template","what":"A template has a version number","title":"writing_templates_and_data_guides","text":"Unique template version numbers way prevent misunderstandings users also needed check whether data guide compatible template version. Version numbering rules. follow R-package version rules. version number structure major.minor major.minor.patch, major, minor patch integer values. version consisting major number invalid, interpreted minor version 0, .e. version “2” interpreted “2.0”. practice means format cell version number recorded text, general number template name optional. Preferably, template also name. Note example figure doesn’t name. Checking compatibilty template versions guide version. use template version numbers check compatibility guide. principle guide can used multiple versions template long locations names variables indexed guide change. case , example, explanatory texts calculations data validity checks changed template. checking version compatibility assume guide compatible consecutive range template versions minimal maximal version number.","code":""},{"path":"https://systemsbioinformatics.github.io/excelDataGuide/articles/writing_templates_and_data_guides.html","id":"all-cells-are-protected-except-those-for-data-entry","dir":"Articles","previous_headings":"Structuring a template","what":"All cells are protected except those for data entry","title":"writing_templates_and_data_guides","text":"Data entry cells distinct background color, “marker yellow”. cells protected status prevent users inadvertently changing .","code":""},{"path":"https://systemsbioinformatics.github.io/excelDataGuide/articles/writing_templates_and_data_guides.html","id":"include-comments","dir":"Articles","previous_headings":"Structuring a template","what":"Include comments","title":"writing_templates_and_data_guides","text":"Refer SOP+ version","code":""},{"path":"https://systemsbioinformatics.github.io/excelDataGuide/articles/writing_templates_and_data_guides.html","id":"built-in-data-entry-checks","dir":"Articles","previous_headings":"Structuring a template","what":"Built-in data entry checks","title":"writing_templates_and_data_guides","text":"validity data entered users checked validity checks, especially misunderstandings likely happen. validity checking capability excel limited. cases data structure can properly described validity rule add comment next cell data entered.","code":""},{"path":"https://systemsbioinformatics.github.io/excelDataGuide/articles/writing_templates_and_data_guides.html","id":"a-single-source-of-parameters","dir":"Articles","previous_headings":"Structuring a template","what":"A single source of parameters","title":"writing_templates_and_data_guides","text":"parameters key-value pairs Parameters needed calculations, example acceptance criteria measurements best entered separate sheet, referred absolute references calculations. case example separate hidden sheet called *_parameters* purpose. information sheet indexed data guide, therefore available R-scripts well.","code":""},{"path":"https://systemsbioinformatics.github.io/excelDataGuide/articles/writing_templates_and_data_guides.html","id":"use-of-hidden-worksheets-for-data-transfer","dir":"Articles","previous_headings":"Structuring a template","what":"Use of hidden worksheets for data transfer","title":"writing_templates_and_data_guides","text":"hidden sheet links plate-formatted data","code":""},{"path":"https://systemsbioinformatics.github.io/excelDataGuide/articles/writing_templates_and_data_guides.html","id":"what-else","dir":"Articles","previous_headings":"","what":"What else?","title":"writing_templates_and_data_guides","text":"keyvalue format mostly used metadata parameters. keyvalue aggregated single named list called “keyvalue”. platedata format used measured data data concerning concentrations plate wells. ranges aggregated single data frame reported variables column names, including column names “row” “col”, corresponding row column names plate.","code":""},{"path":"https://systemsbioinformatics.github.io/excelDataGuide/articles/writing_templates_and_data_guides.html","id":"constructing-a-guide","dir":"Articles","previous_headings":"","what":"Constructing a guide","title":"writing_templates_and_data_guides","text":"Every spreadsheet template accompanied data guide, index registering location different data structures template. guide yaml file, human editable computer readable file format. example first rows data guide: guide must contain following elements:","code":"guide.version: '1.0' template.name: competition template.min.version: '9.3' template.max.version: ~ plate.format: 96 locations:   - sheet: description     type: cells     varname: .template     translate: false     variables:       - name: version         cell: B2   - sheet: description     type: keyvalue     translate: true     atomicclass:       - character       - character       - character       - character       - character       - date       - character       - numeric       - character       - numeric       - character       - numeric       - character       - character     varname: metadata     ranges:       - A10:B21       - A24:B25 # remainder not shown"},{"path":"https://systemsbioinformatics.github.io/excelDataGuide/articles/writing_templates_and_data_guides.html","id":"required-elements","dir":"Articles","previous_headings":"Constructing a guide","what":"Required elements","title":"writing_templates_and_data_guides","text":"guide.version: version guide template.name: name template template.min.version: minimal version template guide can used guide template.max.version: maximal version template guide can used. locations: object containing data locations translations: object containing translations variable names. Translations can used extended (‘long’) format short format short long format. Two functions provided package perform translations vice versa.","code":""},{"path":"https://systemsbioinformatics.github.io/excelDataGuide/articles/writing_templates_and_data_guides.html","id":"conditionally-required-element","dir":"Articles","previous_headings":"Constructing a guide","what":"Conditionally required element:","title":"writing_templates_and_data_guides","text":"plate.format format microplates used experiments. must either ‘24’, ‘48’, ‘96’, ‘384’. required platedata element occurs locations. plate format used check correctness dimensions ranges platedata elements. elements locations indicate data found, whereas translation part contains translations long short names variables. Short names used variable names scripts, whereas long names may used spreadsheet, particular visible user. case names translated using script. Reverse translations may used script output document.","code":""},{"path":[]},{"path":"https://systemsbioinformatics.github.io/excelDataGuide/articles/writing_templates_and_data_guides.html","id":"required-elements-1","dir":"Articles","previous_headings":"Locations","what":"Required elements","title":"writing_templates_and_data_guides","text":"sheet: name sheet data found. type: format data range. translate: (true, false) whether variable names translated use script. varname: name variable data available script. ranges: array ranges data found.","code":""},{"path":"https://systemsbioinformatics.github.io/excelDataGuide/articles/writing_templates_and_data_guides.html","id":"optional-element","dir":"Articles","previous_headings":"Locations","what":"Optional element","title":"writing_templates_and_data_guides","text":"atomicclass: class data ranges, Can values “character”, “numeric”, “integer”, “logical” “date”., can.either singleton array class length number ranges. singleton default values converted character. atomicclass given values coerced. Coercion performed functions .character, .numeric, .integer, .logical, respectively, case date, function produces Date object.","code":""},{"path":"https://systemsbioinformatics.github.io/excelDataGuide/articles/writing_templates_and_data_guides.html","id":"checking-against-the-exceldataguide-json-schema","dir":"Articles","previous_headings":"Locations","what":"Checking against the excelDataGuide json schema","title":"writing_templates_and_data_guides","text":"Correctness structure syntax YAML file like data guide can checked JSON schema (See json-schema-everywhere). provide JSON schema called excelguide_schema.json folder data-raw. use Polyglottal JSON Schema Validator validate guides schema.","code":""},{"path":"https://systemsbioinformatics.github.io/excelDataGuide/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Douwe Molenaar. Author, maintainer.","code":""},{"path":"https://systemsbioinformatics.github.io/excelDataGuide/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Molenaar D (2025). excelDataGuide: Read Data templated Excel Data Reports. R package version 0.2.6, https://systemsbioinformatics.github.io/excelDataGuide/.","code":"@Manual{,   title = {excelDataGuide: Read Data from templated Excel Data Reports},   author = {Douwe Molenaar},   year = {2025},   note = {R package version 0.2.6},   url = {https://systemsbioinformatics.github.io/excelDataGuide/}, }"},{"path":"https://systemsbioinformatics.github.io/excelDataGuide/index.html","id":"exceldataguide","dir":"","previous_headings":"","what":"Read Data from templated Excel Data Reports","title":"Read Data from templated Excel Data Reports","text":"excelDataGuide R package designed streamline process importing data spreadsheet data reporting templates (DRTs) R. data reporting template standardized spreadsheet file (either xls xlsx format) used reporting processing experimental data. templates significantly reduce time required data analysis encourage users present data structured format, minimizing errors misinterpretations. excelDataGuide package eliminates need data analysts write maintain complex code reading data various complex spreadsheet DRTs. Additionally, offers robust framework validating data, ensuring correct data types utilized, facilitating data wrangling necessary. functionality supports Interoperability DRTs, key aspect FAIR principles. package features user-friendly interface extracting data Excel files converting R objects. accommodates three types data structures: key-value pairs, tabular data, microplate-formatted data. locations structures within Excel template specified data guide, YAML file — structured format human- machine-readable.","code":""},{"path":"https://systemsbioinformatics.github.io/excelDataGuide/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Read Data from templated Excel Data Reports","text":"can install development version excelDataGuide recent version R GitHub :","code":"# install.packages(\"pak\") pak::pak(\"SystemsBioinformatics/excelDataGuide\")"},{"path":"https://systemsbioinformatics.github.io/excelDataGuide/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Read Data from templated Excel Data Reports","text":"basic usage package requires one command two file paths: path Excel data file path data guide file. example: output read_data() function list object format determined large part design data guide.","code":"library(excelDataGuide) datafile <- system.file(\"extdata\", \"example_data.xlsx\", package = \"excelDataGuide\") guidefile <- system.file(\"extdata\", \"example_guide.yml\", package = \"excelDataGuide\") data <- read_data(datafile, guidefile)"},{"path":[]},{"path":"https://systemsbioinformatics.github.io/excelDataGuide/index.html","id":"how-it-works","dir":"","previous_headings":"Details","what":"How it works","title":"Read Data from templated Excel Data Reports","text":"design template Excel file data reporting analysis also create data guide file specifies structure location data template. design template carefully can use data guide several versions template. , long location indexed data change, can use data guide different versions template. can specify compatible version templates data guide. package check compatibility. Clearly, use versioned data templates, hence, required field template version number. example template data provided package (system.file(\"extdata\", \"example_data.xlsx\", package = \"excelDataGuide\")). entered data metadata template can use package extract data R. package check coerce data types required formats.","code":""},{"path":"https://systemsbioinformatics.github.io/excelDataGuide/index.html","id":"data-guide","dir":"","previous_headings":"Details","what":"Data guide","title":"Read Data from templated Excel Data Reports","text":"data guide human readable editable file YAML format specifies structure location data Excel file. contains list data types, defined name set parameters. name suggests, data guide used excelDataGuide package guide extract indexed data Excel file convert proper R objects. Part data guide example package, .e. system.file(\"extdata\", \"example_guide.yml\", package = \"excelDataGuide\") shown : provide cue schema data guide, allowing check validity guides wrote. schema available package system.file(\"extdata\", \"excelguide_schema.cue\", package = \"excelDataGuide\"). check validity schema can use CUE validator. details can found vignette (done, see ).","code":"guide.version: '1.0' template.name: competition template.min.version: '9.3' template.max.version: ~ plate.format: 96 locations:   - sheet: description     type: cells     varname: .template     translate: false     variables:       - name: version         cell: B2   - sheet: description     type: keyvalue     translate: true     atomicclass:       - character       - character       - character       - character       - character       - date       - character       - numeric       - character       - numeric       - character       - numeric       - character       - character     varname: metadata     ranges:       - A10:B21       - A24:B25"},{"path":"https://systemsbioinformatics.github.io/excelDataGuide/index.html","id":"future-work","dir":"","previous_headings":"","what":"Future work","title":"Read Data from templated Excel Data Reports","text":"Complete vignette (issue) Provide guide template structures data types without upper size limit, typically time series pre-determined length (issue).","code":""},{"path":"https://systemsbioinformatics.github.io/excelDataGuide/reference/excelDataGuide-package.html","id":null,"dir":"Reference","previous_headings":"","what":"excelDataGuide: Read Data from templated Excel Data Reports — excelDataGuide-package","title":"excelDataGuide: Read Data from templated Excel Data Reports — excelDataGuide-package","text":"Provides functions well YAML guide format facilitate reading data filled-excel templates. particular, package provides facilities experiments performed microplates.","code":""},{"path":[]},{"path":"https://systemsbioinformatics.github.io/excelDataGuide/reference/excelDataGuide-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"excelDataGuide: Read Data from templated Excel Data Reports — excelDataGuide-package","text":"Maintainer: Douwe Molenaar d.molenaar@vu.nl (ORCID)","code":""},{"path":"https://systemsbioinformatics.github.io/excelDataGuide/reference/kvlist_to_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a table from a list of key-value pairs — kvlist_to_table","title":"Create a table from a list of key-value pairs — kvlist_to_table","text":"function facilitates construction table list key-value pairs present data. handy function want print metadata analysis report.","code":""},{"path":"https://systemsbioinformatics.github.io/excelDataGuide/reference/kvlist_to_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a table from a list of key-value pairs — kvlist_to_table","text":"","code":"kvlist_to_table(kvlist, guide, reverse.translate = TRUE)"},{"path":"https://systemsbioinformatics.github.io/excelDataGuide/reference/kvlist_to_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a table from a list of key-value pairs — kvlist_to_table","text":"kvlist list key-value pairs guide data guide reverse.translate logical indicating whether reverse translate keys","code":""},{"path":"https://systemsbioinformatics.github.io/excelDataGuide/reference/kvlist_to_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a table from a list of key-value pairs — kvlist_to_table","text":"data frame columns 'key' 'value'","code":""},{"path":"https://systemsbioinformatics.github.io/excelDataGuide/reference/long_to_shortnames.html","id":null,"dir":"Reference","previous_headings":"","what":"Translation between long and short variable names — long_to_shortnames","title":"Translation between long and short variable names — long_to_shortnames","text":"Translate long short variable names. translation missing original variable long short variable name v returned.","code":""},{"path":"https://systemsbioinformatics.github.io/excelDataGuide/reference/long_to_shortnames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translation between long and short variable names — long_to_shortnames","text":"","code":"long_to_shortnames(v, translations)  short_to_longnames(v, translations)"},{"path":"https://systemsbioinformatics.github.io/excelDataGuide/reference/long_to_shortnames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translation between long and short variable names — long_to_shortnames","text":"v vector variable names translations named vector long variable names names short variable names values","code":""},{"path":"https://systemsbioinformatics.github.io/excelDataGuide/reference/long_to_shortnames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Translation between long and short variable names — long_to_shortnames","text":"vector long short variable names vector long variable names","code":""},{"path":"https://systemsbioinformatics.github.io/excelDataGuide/reference/normalize_wells.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize a vector with well names. — normalize_wells","title":"Normalize a vector with well names. — normalize_wells","text":"Normalized well names format A1, B2, H12, etc., .e., uppercase letter followed integer without zero-padding without spaces. well name can converted normalized value NA returned. plate format given well names checked see present format, converted NA .","code":""},{"path":"https://systemsbioinformatics.github.io/excelDataGuide/reference/normalize_wells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize a vector with well names. — normalize_wells","text":"","code":"normalize_wells(v, format = NULL)"},{"path":"https://systemsbioinformatics.github.io/excelDataGuide/reference/normalize_wells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize a vector with well names. — normalize_wells","text":"v vector potentially sloppy well names format single element character numeric vector format plate, NULL","code":""},{"path":"https://systemsbioinformatics.github.io/excelDataGuide/reference/normalize_wells.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize a vector with well names. — normalize_wells","text":"vector normalized well names","code":""},{"path":"https://systemsbioinformatics.github.io/excelDataGuide/reference/normalize_wells.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normalize a vector with well names. — normalize_wells","text":"","code":"normalize_wells(c(\"a01\", \"A 2\", \"0\", \" A 4 \", \"A05\", \"H012\", \"K12\"), 96) #> [1] \"A1\"  \"A2\"  NA    \"A4\"  \"A5\"  \"H12\" NA    normalize_wells(c(\"a01\", \"A 2\", \"0\", \" A 4 \", \"A05\", \"H012\", \"K12\")) #> [1] \"A1\"  \"A2\"  NA    \"A4\"  \"A5\"  \"H12\" \"K12\""},{"path":"https://systemsbioinformatics.github.io/excelDataGuide/reference/read_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Read all data from a spreadsheet — read_data","title":"Read all data from a spreadsheet — read_data","text":"Read data spreadsheet according reporting template guide. data returned list optional elements keyvalue, table platedata defined guide. minimal maximal template versions guide mustbe compatible template data recorded. Furthermore, name template must match template name guide checkname TRUE.","code":""},{"path":"https://systemsbioinformatics.github.io/excelDataGuide/reference/read_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read all data from a spreadsheet — read_data","text":"","code":"read_data(drfile, guide, checkname = FALSE)"},{"path":"https://systemsbioinformatics.github.io/excelDataGuide/reference/read_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read all data from a spreadsheet — read_data","text":"drfile Path data reporting file guide reporting template guide object path guide file checkname Whether check name guide template","code":""},{"path":"https://systemsbioinformatics.github.io/excelDataGuide/reference/read_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read all data from a spreadsheet — read_data","text":"list three elements","code":""},{"path":"https://systemsbioinformatics.github.io/excelDataGuide/reference/read_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read all data from a spreadsheet — read_data","text":"date atomicclass POSIXct object R. Hence, can convert object date string format YYYY-MM-DD using format(.POSIXct(x, tz=\"\"), format=\"%Y-%m-%d\").","code":""},{"path":"https://systemsbioinformatics.github.io/excelDataGuide/reference/read_guide.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a spreadsheet data guide — read_guide","title":"Read a spreadsheet data guide — read_guide","text":"spreadsheet guide YAML file contains directions data can found spreadsheet. extensive description file type, well instructions create test validity, please see vignettes.","code":""},{"path":"https://systemsbioinformatics.github.io/excelDataGuide/reference/read_guide.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a spreadsheet data guide — read_guide","text":"","code":"read_guide(path)"},{"path":"https://systemsbioinformatics.github.io/excelDataGuide/reference/read_guide.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a spreadsheet data guide — read_guide","text":"path path guide file","code":""},{"path":"https://systemsbioinformatics.github.io/excelDataGuide/reference/read_guide.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a spreadsheet data guide — read_guide","text":"list object guide data","code":""},{"path":"https://systemsbioinformatics.github.io/excelDataGuide/reference/rowcol_from_well.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate row and column from well name. — rowcol_from_well","title":"Calculate row and column from well name. — rowcol_from_well","text":"Calculate row column well name.","code":""},{"path":"https://systemsbioinformatics.github.io/excelDataGuide/reference/rowcol_from_well.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate row and column from well name. — rowcol_from_well","text":"","code":"rowcol_from_well(well, format)"},{"path":"https://systemsbioinformatics.github.io/excelDataGuide/reference/rowcol_from_well.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate row and column from well name. — rowcol_from_well","text":"well character vector standard well names format single element character numeric vector format plate","code":""},{"path":"https://systemsbioinformatics.github.io/excelDataGuide/reference/rowcol_from_well.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate row and column from well name. — rowcol_from_well","text":"list two elements: row col","code":""},{"path":"https://systemsbioinformatics.github.io/excelDataGuide/reference/rowcol_from_well.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate row and column from well name. — rowcol_from_well","text":"","code":"rowcol_from_well(c(\"A1\", \"B2\", \"C3\", NA), 48) #> # A tibble: 4 × 2 #>   row     col #>   <fct> <int> #> 1 A         1 #> 2 B         2 #> 3 C         3 #> 4 NA       NA # The order is preserved rowcol_from_well(c(\"H12\", \"A1\"), 96) #> # A tibble: 2 × 2 #>   row     col #>   <fct> <int> #> 1 H        12 #> 2 A         1"},{"path":"https://systemsbioinformatics.github.io/excelDataGuide/reference/star_to_number.html","id":null,"dir":"Reference","previous_headings":"","what":"Using stars to indicate rejected values — star_to_number","title":"Using stars to indicate rejected values — star_to_number","text":"template uses convention putting star front behind numbers rejected use function star_to_number() can used convert variable number. function has_star() checks whether string star. can used generate logical vector indicating accepted/rejected values.","code":""},{"path":"https://systemsbioinformatics.github.io/excelDataGuide/reference/star_to_number.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Using stars to indicate rejected values — star_to_number","text":"","code":"star_to_number(x)  has_star(x)"},{"path":"https://systemsbioinformatics.github.io/excelDataGuide/reference/star_to_number.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Using stars to indicate rejected values — star_to_number","text":"x character vector","code":""},{"path":"https://systemsbioinformatics.github.io/excelDataGuide/reference/star_to_number.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Using stars to indicate rejected values — star_to_number","text":"Function star_to_number() returns numeric vector, has_star() returns logical vector.","code":""},{"path":"https://systemsbioinformatics.github.io/excelDataGuide/reference/well_from_rowcol.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate well number from row and column — well_from_rowcol","title":"Calculate well number from row and column — well_from_rowcol","text":"function can used raw_map() function package platetools.","code":""},{"path":"https://systemsbioinformatics.github.io/excelDataGuide/reference/well_from_rowcol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate well number from row and column — well_from_rowcol","text":"","code":"well_from_rowcol(row, col)"},{"path":"https://systemsbioinformatics.github.io/excelDataGuide/reference/well_from_rowcol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate well number from row and column — well_from_rowcol","text":"row character vector row names col numeric vector column names","code":""},{"path":"https://systemsbioinformatics.github.io/excelDataGuide/reference/well_from_rowcol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate well number from row and column — well_from_rowcol","text":"character vector well numbers","code":""}]
